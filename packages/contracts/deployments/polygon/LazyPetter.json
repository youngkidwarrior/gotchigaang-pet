{
  "address": "0x21d6F8EE8d0B9c33703CFFd4791c330Ec78CA453",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_pokeMe",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gotchiDiamond",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dao",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "gotchiOwner",
          "type": "address"
        }
      ],
      "name": "AddGotchiOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "gotchiOwner",
          "type": "address"
        }
      ],
      "name": "RemoveGotchiOwner",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gotchiOwner",
          "type": "address"
        }
      ],
      "name": "addGotchiOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gelato",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGotchiOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastExecuted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "petGotchis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pokeMe",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gotchiOwner",
          "type": "address"
        }
      ],
      "name": "removeGotchiOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5a3470732bf73d0638ee97c7f52def0b057cef04ab4887d60060fcf7b6898855",
  "receipt": {
    "to": null,
    "from": "0x482Fb235af54B97a3E0c734bc45c4635BD9bA111",
    "contractAddress": "0x21d6F8EE8d0B9c33703CFFd4791c330Ec78CA453",
    "transactionIndex": 55,
    "gasUsed": "840180",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000800000000000000000000100000000000000000000000000000400000000000080000000000000000080000000000000000000000000000000000000000000000000000000000000000001000000000000200000000000000000000000000000000000000000000000000000000000004000000000000000000001000000000008000000000000000000100000000000000000010000000000000000000000000000000000000000000000000004100000",
    "blockHash": "0xb88653cd288e1b05996e95e008ced6f04d070edb1cc55976eaf45e39fc231714",
    "transactionHash": "0x5a3470732bf73d0638ee97c7f52def0b057cef04ab4887d60060fcf7b6898855",
    "logs": [
      {
        "transactionIndex": 55,
        "blockNumber": 24084883,
        "transactionHash": "0x5a3470732bf73d0638ee97c7f52def0b057cef04ab4887d60060fcf7b6898855",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000482fb235af54b97a3e0c734bc45c4635bd9ba111",
          "0x000000000000000000000000bc6044f4a1688d8b8596a9f7d4659e09985eebe6"
        ],
        "data": "0x000000000000000000000000000000000000000000000000005abf289f6abc240000000000000000000000000000000000000000000000004ad192bb97c0e0ee000000000000000000000000000000000000000000001d84916b5a47a9f621f00000000000000000000000000000000000000000000000004a76d392f85624ca000000000000000000000000000000000000000000001d8491c619704960de14",
        "logIndex": 196,
        "blockHash": "0xb88653cd288e1b05996e95e008ced6f04d070edb1cc55976eaf45e39fc231714"
      }
    ],
    "blockNumber": 24084883,
    "cumulativeGasUsed": "7404177",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x527a819db1eb0e34426297b03bae11F2f8B3A19E",
    "0x86935F11C86623deC8a25696E1C19a8659CbF95d",
    "0xb60374ae550f6ab6d18e7c9cfafa04ff310235c1"
  ],
  "numDeployments": 2,
  "solcInputHash": "573aeea672e0029f7e5da6ba21ccd568",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_pokeMe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gotchiDiamond\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gotchiOwner\",\"type\":\"address\"}],\"name\":\"AddGotchiOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gotchiOwner\",\"type\":\"address\"}],\"name\":\"RemoveGotchiOwner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gotchiOwner\",\"type\":\"address\"}],\"name\":\"addGotchiOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gelato\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGotchiOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastExecuted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"petGotchis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pokeMe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gotchiOwner\",\"type\":\"address\"}],\"name\":\"removeGotchiOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LazyPetter.sol\":\"LazyPetter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"contracts/LazyPetter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.0;\\n\\nimport { PokeMeReady } from './PokeMeReady.sol';\\n\\ninterface AavegotchiFacet {\\n  function tokenIdsOfOwner(address _owner)\\n    external\\n    view\\n    returns (uint32[] memory tokenIds_);\\n\\n  function isPetOperatorForAll(address _owner, address _operator)\\n    external\\n    view\\n    returns (bool approved_);\\n}\\n\\ninterface AavegotchiGameFacet {\\n  function interact(uint256[] calldata _tokenIds) external;\\n}\\n\\ninterface Moloch {\\n  struct Member {\\n    address delegateKey; // the key responsible for submitting proposals and voting - defaults to member address unless updated\\n    uint256 shares; // the # of voting shares assigned to this member\\n    uint256 loot; // the loot amount available to this member (combined with shares on ragequit)\\n    bool exists; // always true once a member has been created\\n    uint256 highestIndexYesVote; // highest proposal index # on which the member voted YES\\n    uint256 jailed; // set to proposalIndex of a passing guild kick proposal for this member, prevents voting on and sponsoring proposals\\n  }\\n\\n  function members(address member)\\n    external\\n    view\\n    returns (\\n      address delegateKey,\\n      uint256 shares,\\n      uint256 loot,\\n      bool exists,\\n      uint256 highestIndexYesVote,\\n      uint256 jailed\\n    );\\n}\\n\\ncontract LazyPetter is PokeMeReady {\\n  uint256 public lastExecuted;\\n  address[] private gotchiOwners;\\n  AavegotchiFacet private af;\\n  AavegotchiGameFacet private agf;\\n  Moloch private moloch;\\n\\n  event AddGotchiOwner(address gotchiOwner);\\n  event RemoveGotchiOwner(address gotchiOwner);\\n\\n  constructor(\\n    address payable _pokeMe,\\n    address gotchiDiamond,\\n    address dao\\n  ) PokeMeReady(_pokeMe) {\\n    af = AavegotchiFacet(gotchiDiamond);\\n    agf = AavegotchiGameFacet(gotchiDiamond);\\n    moloch = Moloch(dao);\\n  }\\n\\n  modifier onlyGaang() {\\n    (, uint256 shares, uint256 loot, , , ) = moloch.members(msg.sender);\\n    require(shares > 0 || loot > 0);\\n    _;\\n  }\\n\\n  function addGotchiOwner(address _gotchiOwner) external {\\n    require(\\n      af.isPetOperatorForAll(_gotchiOwner, address(this)),\\n      'Not authorized to be pet by autopetter'\\n    );\\n    for (uint256 i = 0; i < gotchiOwners.length; i++) {\\n      require(gotchiOwners[i] != _gotchiOwner, 'Gotchis already being pet');\\n    }\\n    uint32[] memory gotchis = af.tokenIdsOfOwner(_gotchiOwner);\\n    require(gotchis.length > 0, 'Addresses must have at least one gotchi');\\n    gotchiOwners.push(_gotchiOwner);\\n    emit AddGotchiOwner(_gotchiOwner);\\n  }\\n\\n  function removeGotchiOwner(address _gotchiOwner) external onlyGaang {\\n    for (uint256 i = 0; i < gotchiOwners.length; i++) {\\n      if (gotchiOwners[i] == _gotchiOwner) {\\n        delete gotchiOwners[i];\\n        emit RemoveGotchiOwner(_gotchiOwner);\\n      }\\n    }\\n  }\\n\\n  function petGotchis() external onlyPokeMe {\\n    require(\\n      ((block.timestamp - lastExecuted) > 43200),\\n      'LazyPetter: pet: 12 hours not elapsed'\\n    );\\n    require(gotchiOwners.length > 0, 'LazyPetter: no gotchis to pet');\\n    for (uint256 i = 0; i < gotchiOwners.length; i++) {\\n      uint32[] memory gotchis = af.tokenIdsOfOwner(gotchiOwners[i]);\\n      uint256[] memory gotchiIds = new uint256[](gotchis.length);\\n      for (uint256 j = 0; j < gotchis.length; j++) {\\n        gotchiIds[j] = uint256(gotchis[j]);\\n      }\\n      agf.interact(gotchiIds);\\n    }\\n\\n    lastExecuted = block.timestamp;\\n  }\\n\\n  function getGotchiOwners() external view returns (address[] memory) {\\n    return gotchiOwners;\\n  }\\n}\\n\",\"keccak256\":\"0x34fd2a4c54f53fbbabb5eae0ed420a1e10ad37187fc71d6b414c3b6f507c4a39\",\"license\":\"UNLICENSED\"},\"contracts/PokeMeReady.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.0;\\n\\nimport {\\n    SafeERC20,\\n    IERC20\\n} from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ninterface IPokeMe {\\n    function gelato() external view returns (address payable);\\n}\\n\\nabstract contract PokeMeReady {\\n    address public immutable pokeMe;\\n    address payable public immutable gelato;\\n    address public constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    constructor(address _pokeMe) {\\n        pokeMe = _pokeMe;\\n        gelato = IPokeMe(_pokeMe).gelato();\\n    }\\n\\n    modifier onlyPokeMe() {\\n        require(msg.sender == pokeMe, \\\"PokeMeReady: onlyPokeMe\\\");\\n        _;\\n    }\\n\\n    function _transfer(uint256 _amount, address _paymentToken) internal {\\n        if (_paymentToken == ETH) {\\n            (bool success, ) = gelato.call{value: _amount}(\\\"\\\");\\n            require(success, \\\"_transfer: ETH transfer failed\\\");\\n        } else {\\n            SafeERC20.safeTransfer(IERC20(_paymentToken), gelato, _amount);\\n        }\\n    }\\n}\",\"keccak256\":\"0x4675c2ea835bb7c594a56d78c591b1603a04c13602ae8fe19732842b370ee33e\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405162000e8e38038062000e8e83398101604081905261003191610135565b82806001600160a01b03166080816001600160a01b031660601b81525050806001600160a01b031663573ea5756040518163ffffffff1660e01b815260040160206040518083038186803b15801561008857600080fd5b505afa15801561009c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c09190610112565b60601b6001600160601b03191660a05250600280546001600160a01b03199081166001600160a01b03948516908117909255600380548216909217909155600480549091169190921617905550610199565b600060208284031215610123578081fd5b815161012e81610181565b9392505050565b600080600060608486031215610149578182fd5b835161015481610181565b602085015190935061016581610181565b604085015190925061017681610181565b809150509250925092565b6001600160a01b038116811461019657600080fd5b50565b60805160601c60a05160601c610cc2620001cc60003960006107a20152600081816104f901526107de0152610cc26000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063573ea5751161005b578063573ea575146100db5780638322fff2146100f0578063c84eee0d146100f8578063d377e1621461010057610088565b80631c15ff771461008d5780633199c988146100ab57806339d68252146100c05780634aa96c93146100d3575b600080fd5b610095610115565b6040516100a29190610c0d565b60405180910390f35b6100be6100b936600461088b565b61011b565b005b6100be6100ce36600461088b565b61029b565b6100be6104ee565b6100e36107a0565b6040516100a291906109e3565b6100e36107c4565b6100e36107dc565b610108610800565b6040516100a29190610a11565b60005481565b6004805460405163022b92c360e21b815260009283926001600160a01b0316916308ae4b0c9161014d913391016109e3565b60c06040518083038186803b15801561016557600080fd5b505afa158015610179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019d91906108ae565b505050925092505060008211806101b45750600081115b6101bd57600080fd5b60005b60015481101561029557836001600160a01b0316600182815481106101f557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610283576001818154811061023157634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690556040517f283f3fd3e55b6e54d2987b2646307479764812a59c9dc1f270afff6617fb27659061027a9086906109e3565b60405180910390a15b8061028d81610c2d565b9150506101c0565b50505050565b600254604051636b9ac7f560e11b81526001600160a01b039091169063d7358fea906102cd90849030906004016109f7565b60206040518083038186803b1580156102e557600080fd5b505afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d91906109c9565b6103425760405162461bcd60e51b815260040161033990610add565b60405180910390fd5b60005b6001548110156103bf57816001600160a01b03166001828154811061037a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156103ad5760405162461bcd60e51b815260040161033990610b5a565b806103b781610c2d565b915050610345565b506002546040516313cb3cb360e31b81526000916001600160a01b031690639e59e598906103f19085906004016109e3565b60006040518083038186803b15801561040957600080fd5b505afa15801561041d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104459190810190610908565b905060008151116104685760405162461bcd60e51b815260040161033990610a96565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0384161790556040517f255741ebc5fddfc38956790da2978ab124067949bbbfd5019cdf31b638f367d1906104e29084906109e3565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105365760405162461bcd60e51b815260040161033990610b23565b61a8c0600054426105479190610c16565b116105645760405162461bcd60e51b815260040161033990610bc8565b6001546105835760405162461bcd60e51b815260040161033990610b91565b60005b60015481101561079957600254600180546000926001600160a01b031691639e59e59891859081106105c857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516001600160e01b031960e084901b1681526105fe916001600160a01b0316906004016109e3565b60006040518083038186803b15801561061657600080fd5b505afa15801561062a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106529190810190610908565b90506000815167ffffffffffffffff81111561067e57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106a7578160200160208202803683370190505b50905060005b8251811015610721578281815181106106d657634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff1682828151811061070457634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061071981610c2d565b9150506106ad565b506003546040516322c6751960e01b81526001600160a01b03909116906322c6751990610752908490600401610a5e565b600060405180830381600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b505050505050808061079190610c2d565b915050610586565b5042600055565b7f000000000000000000000000000000000000000000000000000000000000000081565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600180548060200260200160405190810160405280929190818152602001828054801561085857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161083a575b5050505050905090565b8051801515811461087257600080fd5b919050565b805163ffffffff8116811461087257600080fd5b60006020828403121561089c578081fd5b81356108a781610c74565b9392505050565b60008060008060008060c087890312156108c6578182fd5b86516108d181610c74565b60208801516040890151919750955093506108ee60608801610862565b92506080870151915060a087015190509295509295509295565b6000602080838503121561091a578182fd5b825167ffffffffffffffff80821115610931578384fd5b818501915085601f830112610944578384fd5b81518181111561095657610956610c5e565b8381026040518582820101818110858211171561097557610975610c5e565b604052828152858101935084860182860187018a1015610993578788fd5b8795505b838610156109bc576109a881610877565b855260019590950194938601938601610997565b5098975050505050505050565b6000602082840312156109da578081fd5b6108a782610862565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015610a525783516001600160a01b031683529284019291840191600101610a2d565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610a5257835183529284019291840191600101610a7a565b60208082526027908201527f416464726573736573206d7573742068617665206174206c65617374206f6e6560408201526620676f7463686960c81b606082015260800190565b60208082526026908201527f4e6f7420617574686f72697a656420746f20626520706574206279206175746f6040820152653832ba3a32b960d11b606082015260800190565b60208082526017908201527f506f6b654d6552656164793a206f6e6c79506f6b654d65000000000000000000604082015260600190565b60208082526019908201527f476f746368697320616c7265616479206265696e672070657400000000000000604082015260600190565b6020808252601d908201527f4c617a795065747465723a206e6f20676f746368697320746f20706574000000604082015260600190565b60208082526025908201527f4c617a795065747465723a207065743a20313220686f757273206e6f7420656c604082015264185c1cd95960da1b606082015260800190565b90815260200190565b600082821015610c2857610c28610c48565b500390565b6000600019821415610c4157610c41610c48565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c8957600080fd5b5056fea2646970667358221220cf23ba4825fdadd4d7bc63877ddd3566c08b9b649655659e852050a00679b20664736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063573ea5751161005b578063573ea575146100db5780638322fff2146100f0578063c84eee0d146100f8578063d377e1621461010057610088565b80631c15ff771461008d5780633199c988146100ab57806339d68252146100c05780634aa96c93146100d3575b600080fd5b610095610115565b6040516100a29190610c0d565b60405180910390f35b6100be6100b936600461088b565b61011b565b005b6100be6100ce36600461088b565b61029b565b6100be6104ee565b6100e36107a0565b6040516100a291906109e3565b6100e36107c4565b6100e36107dc565b610108610800565b6040516100a29190610a11565b60005481565b6004805460405163022b92c360e21b815260009283926001600160a01b0316916308ae4b0c9161014d913391016109e3565b60c06040518083038186803b15801561016557600080fd5b505afa158015610179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019d91906108ae565b505050925092505060008211806101b45750600081115b6101bd57600080fd5b60005b60015481101561029557836001600160a01b0316600182815481106101f557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610283576001818154811061023157634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690556040517f283f3fd3e55b6e54d2987b2646307479764812a59c9dc1f270afff6617fb27659061027a9086906109e3565b60405180910390a15b8061028d81610c2d565b9150506101c0565b50505050565b600254604051636b9ac7f560e11b81526001600160a01b039091169063d7358fea906102cd90849030906004016109f7565b60206040518083038186803b1580156102e557600080fd5b505afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d91906109c9565b6103425760405162461bcd60e51b815260040161033990610add565b60405180910390fd5b60005b6001548110156103bf57816001600160a01b03166001828154811061037a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156103ad5760405162461bcd60e51b815260040161033990610b5a565b806103b781610c2d565b915050610345565b506002546040516313cb3cb360e31b81526000916001600160a01b031690639e59e598906103f19085906004016109e3565b60006040518083038186803b15801561040957600080fd5b505afa15801561041d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104459190810190610908565b905060008151116104685760405162461bcd60e51b815260040161033990610a96565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0384161790556040517f255741ebc5fddfc38956790da2978ab124067949bbbfd5019cdf31b638f367d1906104e29084906109e3565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105365760405162461bcd60e51b815260040161033990610b23565b61a8c0600054426105479190610c16565b116105645760405162461bcd60e51b815260040161033990610bc8565b6001546105835760405162461bcd60e51b815260040161033990610b91565b60005b60015481101561079957600254600180546000926001600160a01b031691639e59e59891859081106105c857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040516001600160e01b031960e084901b1681526105fe916001600160a01b0316906004016109e3565b60006040518083038186803b15801561061657600080fd5b505afa15801561062a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106529190810190610908565b90506000815167ffffffffffffffff81111561067e57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106a7578160200160208202803683370190505b50905060005b8251811015610721578281815181106106d657634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff1682828151811061070457634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061071981610c2d565b9150506106ad565b506003546040516322c6751960e01b81526001600160a01b03909116906322c6751990610752908490600401610a5e565b600060405180830381600087803b15801561076c57600080fd5b505af1158015610780573d6000803e3d6000fd5b505050505050808061079190610c2d565b915050610586565b5042600055565b7f000000000000000000000000000000000000000000000000000000000000000081565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600180548060200260200160405190810160405280929190818152602001828054801561085857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161083a575b5050505050905090565b8051801515811461087257600080fd5b919050565b805163ffffffff8116811461087257600080fd5b60006020828403121561089c578081fd5b81356108a781610c74565b9392505050565b60008060008060008060c087890312156108c6578182fd5b86516108d181610c74565b60208801516040890151919750955093506108ee60608801610862565b92506080870151915060a087015190509295509295509295565b6000602080838503121561091a578182fd5b825167ffffffffffffffff80821115610931578384fd5b818501915085601f830112610944578384fd5b81518181111561095657610956610c5e565b8381026040518582820101818110858211171561097557610975610c5e565b604052828152858101935084860182860187018a1015610993578788fd5b8795505b838610156109bc576109a881610877565b855260019590950194938601938601610997565b5098975050505050505050565b6000602082840312156109da578081fd5b6108a782610862565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015610a525783516001600160a01b031683529284019291840191600101610a2d565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610a5257835183529284019291840191600101610a7a565b60208082526027908201527f416464726573736573206d7573742068617665206174206c65617374206f6e6560408201526620676f7463686960c81b606082015260800190565b60208082526026908201527f4e6f7420617574686f72697a656420746f20626520706574206279206175746f6040820152653832ba3a32b960d11b606082015260800190565b60208082526017908201527f506f6b654d6552656164793a206f6e6c79506f6b654d65000000000000000000604082015260600190565b60208082526019908201527f476f746368697320616c7265616479206265696e672070657400000000000000604082015260600190565b6020808252601d908201527f4c617a795065747465723a206e6f20676f746368697320746f20706574000000604082015260600190565b60208082526025908201527f4c617a795065747465723a207065743a20313220686f757273206e6f7420656c604082015264185c1cd95960da1b606082015260800190565b90815260200190565b600082821015610c2857610c28610c48565b500390565b6000600019821415610c4157610c41610c48565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c8957600080fd5b5056fea2646970667358221220cf23ba4825fdadd4d7bc63877ddd3566c08b9b649655659e852050a00679b20664736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 662,
        "contract": "contracts/LazyPetter.sol:LazyPetter",
        "label": "lastExecuted",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 665,
        "contract": "contracts/LazyPetter.sol:LazyPetter",
        "label": "gotchiOwners",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 668,
        "contract": "contracts/LazyPetter.sol:LazyPetter",
        "label": "af",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AavegotchiFacet)620"
      },
      {
        "astId": 671,
        "contract": "contracts/LazyPetter.sol:LazyPetter",
        "label": "agf",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AavegotchiGameFacet)627"
      },
      {
        "astId": 674,
        "contract": "contracts/LazyPetter.sol:LazyPetter",
        "label": "moloch",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(Moloch)658"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AavegotchiFacet)620": {
        "encoding": "inplace",
        "label": "contract AavegotchiFacet",
        "numberOfBytes": "20"
      },
      "t_contract(AavegotchiGameFacet)627": {
        "encoding": "inplace",
        "label": "contract AavegotchiGameFacet",
        "numberOfBytes": "20"
      },
      "t_contract(Moloch)658": {
        "encoding": "inplace",
        "label": "contract Moloch",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}